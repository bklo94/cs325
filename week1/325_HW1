# CS325 Homework 1
# Victor Ness
# 4/7/2018
import _random
import time


def insertion_sort(array):
    """insertion_sort accepts a list of integers and sorts them in ascending order"""

    if len(array) == 0 or len(array) == 1:
        return array

    for i in range(1, len(array)):
        current = array[i]
        pos = i

        while pos > 0 and current < array[pos-1]:
            array[pos] = array[pos-1]
            pos -= 1

        array[pos] = current


comparisons = 0


def merge_sort(array):
    """merge_sort accepts a list of integers and sorts them in ascending order"""
    global comparisons
    if len(array) > 1:
        middle = len(array) // 2
        left = array[:middle]
        right = array[middle:]

        merge_sort(left)
        merge_sort(right)

        i = 0  # left index
        j = 0  # right index
        k = 0  # new array index

        while i < len(left) and j < len(right):
            if left[i] < right[j]:
                array[k] = left[i]
                i += 1
                comparisons += 1
            else:
                array[k] = right[j]
                j += 1
            k += 1

        while i < len(left):
            array[k] = left[i]
            i += 1
            k += 1

        while j < len(right):
            array[k] = right[j]
            j += 1
            k += 1

#testing
n = 50000

sorted = list(reversed(range(n)))
print(sorted)
start = time.clock()
insertion_sort(sorted)
end = time.clock()
print(sorted)
time = end-start
print("For {0} terms, running time is: {1} seconds".format(n, time))
print(comparisons)
